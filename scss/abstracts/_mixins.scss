@mixin prefixing($prop, $value) {
    -webkit-#{$prop}: #{$value};
    -moz-#{$prop}: #{$value};
    -ms-#{$prop}: #{$value};
    -o-#{$prop}: #{$value};
    #{$prop}: #{$value};
}

@mixin prefixing-values($prop, $value) {
    #{$prop}: -webkit-#{$value};
    #{$prop}: -moz-#{$value};
    #{$prop}: -ms-#{$value};
    #{$prop}: -o-#{$value};
    #{$prop}: #{$value};
}

@mixin flex-start-row {
    @include prefixing(display, flex);
    @include prefixing(align-items, center);
}

@mixin flex-end-row {
    @include prefixing(display, flex);
    @include prefixing(justify-content, flex-end);
    @include prefixing(align-items, center);
}

@mixin flex-around-row {
    @include prefixing(display, flex);
    @include prefixing(justify-content, space-around);
    @include prefixing(align-items, center);
}

@mixin flex-evenly-row {
    @include prefixing(display, flex);
    @include prefixing(justify-content, space-evenly);
    @include prefixing(align-items, center);
}

@mixin flex-center-row {
    @include prefixing(display, flex);
    @include prefixing(justify-content, center);
    @include prefixing(align-items, center);
}

@mixin flex-center-column {
    @include flex-center-row;
    @include prefixing(flex-direction, column);
}

@mixin flex-between-row {
    @include prefixing(display, flex);
    @include prefixing(justify-content, space-between);
    @include prefixing(align-items, center);
}

@mixin flex-between-column {
    @include flex-between-row;
    @include prefixing(flex-direction, column);
}

@mixin reset-bg {
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
}

@mixin fade($type) {
    @if $type == "hide" {
        visibility: hidden;
        opacity: 0;
    } @else if $type == "show" {
        visibility: visible;
        opacity: 1;
    }
}

@mixin transition($prop, $time, $func, $delaying) {
    @if $func == ease {
        @include prefixing(transition, $prop #{$time}s ease #{$delaying}s);
    } @else if $func == ease-in {
        @include prefixing(transition, $prop #{$time}s ease-in #{$delaying}s);
    } @else if $func == ease-in-out {
        @include prefixing(transition, $prop #{$time}s ease-in-out #{$delaying}s);
    } @else if $func == ease-out {
        @include prefixing(transition, $prop #{$time}s ease-out #{$delaying}s);
    } @else if $func == linear {
        @include prefixing(transition, $prop #{$time}s linear #{$delaying}s);
    }
}

@mixin styleOriginTransform {
    transform-origin: top right;
    transform-style: preserve-3D;
}

@mixin show-with-translate-x-0 {
    @include prefixing(transform, translateX(0));
    @include fade(show);
}

@mixin hide-with-translate-x-reverse-15rem {
    @include prefixing(transform, translateX(-15rem));
    @include fade(hide);
}

@mixin hide-with-translate-x-35rem {
    @include prefixing(transform, translateX(35rem));
    @include fade(hide);
}

@mixin pad140 {
    padding: 14rem 0;
}

@mixin transitionAllEaseInOut3s {
    transition: all 0.3s ease-in-out 0.3s;
}

@mixin absoluteTopLeftZero {
    position: absolute;
    top: 0;
    left: 0;
}

@mixin absoluteTopLeft50 {
    position: absolute;
    top: 50%;
    left: 50%;
}

@mixin baseLayoutSection {
    width: 100%;
    height: 100%;
    @include pad140;
    @include absoluteTopLeftZero;
    @include flex-center-row;
    background-color: rgba(15, 15, 15, 0.397);
    transform: rotate(90deg);
}
